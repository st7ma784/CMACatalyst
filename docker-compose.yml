version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: cma-postgres
    environment:
      POSTGRES_DB: cma_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/init.sql:/docker-entrypoint-initdb.d/02-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    container_name: cma-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  minio:
    image: minio/minio:latest
    container_name: cma-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  rabbitmq:
    image: rabbitmq:3-management
    container_name: cma-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  llama-service:
    build:
      context: .
      dockerfile: Dockerfile.llama
    container_name: cma-llama
    ports:
      - "8002:8002"
    environment:
      - MODEL_NAME=microsoft/DialoGPT-medium
      - DEVICE=cpu
      - CACHE_DIR=/app/models
    volumes:
      - llama_models:/app/models
    depends_on:
      - redis

  chatbot:
    build:
      context: .
      dockerfile: Dockerfile.chatbot
    container_name: cma-chatbot
    ports:
      - "8001:8001"
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=cma_db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - LLM_MODEL_NAME=microsoft/DialoGPT-medium
      - HUGGINGFACE_CACHE_DIR=/app/models
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
      - chatbot_models:/app/models

  document-inbox:
    build:
      context: ./services/document-inbox
      dockerfile: Dockerfile
    container_name: cma-document-inbox
    ports:
      - "3001:3001"
    environment:
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_BUCKET=mordecai-documents
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
    depends_on:
      minio:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads

  ocr-processor:
    build:
      context: ./services/ocr-processor
      dockerfile: Dockerfile
    container_name: cma-ocr-processor
    ports:
      - "3002:3002"
    environment:
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_BUCKET=mordecai-documents
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
    depends_on:
      minio:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  translation-service:
    build:
      context: ./services/translation-service
      dockerfile: Dockerfile
    container_name: cma-translation
    ports:
      - "8003:8003"
    environment:
      - TRANSFORMERS_CACHE=/app/models
      - HF_HOME=/app/models
    volumes:
      - translation_models:/app/models

  rag-ingestion:
    build:
      context: ./services/rag-ingestion
      dockerfile: Dockerfile
    container_name: cma-rag-ingestion
    ports:
      - "8004:8004"
    environment:
      - CHROMADB_HOST=chromadb
      - CHROMADB_PORT=8000
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - TRAINING_MANUALS_BUCKET=training-manuals
      - OLLAMA_URL=http://ollama:11434
    depends_on:
      minio:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - rag_models:/app/models

  chromadb:
    image: chromadb/chroma:latest
    container_name: cma-chromadb
    ports:
      - "8005:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["http://localhost:5000","http://localhost:3000","http://localhost:8001","http://localhost:8004"]
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    restart: unless-stopped

  ollama:
    image: ollama/ollama:latest
    container_name: cma-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=http://localhost:5000,http://localhost:3000,http://localhost:8001,http://localhost:8004
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cma-app
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=cma_db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - FILE_STORAGE_PATH=/app/uploads
      - CHATBOT_URL=http://chatbot:8001
      - DOCUMENT_INBOX_URL=http://document-inbox:3001
      - OCR_PROCESSOR_URL=http://ocr-processor:3002
      - TRANSLATION_SERVICE_URL=http://translation-service:8003
      - RAG_INGESTION_URL=http://rag-ingestion:8004
      - CHROMADB_URL=http://chromadb:8000
      - OLLAMA_URL=http://ollama:11434
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - RABBITMQ_URL=amqp://admin:password@rabbitmq:5672
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      document-inbox:
        condition: service_started
      ocr-processor:
        condition: service_started
      translation-service:
        condition: service_started
      rag-ingestion:
        condition: service_started
      chromadb:
        condition: service_started
      ollama:
        condition: service_started
    volumes:
      - ./uploads:/app/uploads
      - ./client/build:/app/client/build

  nginx:
    image: nginx:alpine
    container_name: cma-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./uploads:/var/www/uploads
    depends_on:
      - app
      - chatbot

volumes:
  postgres_data:
  redis_data:
  minio_data:
  rabbitmq_data:
  chatbot_models:
  llama_models:
  translation_models:
  rag_models:
  chroma_data:
  ollama_data:
