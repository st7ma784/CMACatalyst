version: '3.8'

services:
  # Main OCR Demo Application
  ocr-demo:
    build: .
    container_name: ocr-demo-app
    ports:
      - "5001:5001"
    environment:
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5001
      - OLLAMA_BASE_URL=http://ollama:11434
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./processed_docs:/app/processed_docs
      - ./temp:/app/temp
      - ./credentials:/app/credentials
    depends_on:
      - ollama
      - redis
    networks:
      - ocr-network
    restart: unless-stopped

  # Ollama LLM Service
  ollama:
    image: ollama/ollama:latest
    container_name: ocr-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    networks:
      - ocr-network
    restart: unless-stopped
    # GPU support (uncomment if you have NVIDIA GPU)
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: ocr-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - ocr-network
    restart: unless-stopped

  # PostgreSQL for production database (optional - comment out to use SQLite)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: ocr-postgres
  #   environment:
  #     POSTGRES_DB: ocr_demo
  #     POSTGRES_USER: ocr_user
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ocr_password}
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - ocr-network
  #   restart: unless-stopped

  # Nginx reverse proxy (for production)
  # nginx:
  #   image: nginx:alpine
  #   container_name: ocr-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/ssl/certs:ro
  #   depends_on:
  #     - ocr-demo
  #   networks:
  #     - ocr-network
  #   restart: unless-stopped

volumes:
  ollama-data:
  redis-data:
  # postgres-data:

networks:
  ocr-network:
    driver: bridge